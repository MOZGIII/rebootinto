name: code

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron:  '0 20 * * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

defaults:
  run:
    shell: bash

jobs:

  test:
    name: ${{ matrix.rust-toolchain.name }} / ${{ matrix.platform.name }} / ${{ matrix.mode.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:

        rust-toolchain:
          - name: stable
            allow-fail: false

        platform:
          - name: Linux
            os: ubuntu-latest
            build-env-script: .github/scripts/build_env/linux.sh
            env: {}
            experimental: false
          - name: Windows
            os: windows-latest
            build-env-script: .github/scripts/build_env/windows.sh
            env:
              CARGO_INCREMENTAL: "0"
            experimental: false

        mode:
          - name: clippy
            cargo-command: clippy
            cargo-args: --workspace -- -D warnings
          - name: test
            cargo-command: test
            cargo-args: --workspace
          - name: build
            cargo-command: build
            cargo-args: --workspace

      fail-fast: false
    continue-on-error: ${{ matrix.platform.experimental || matrix.rust-toolchain.allow-fail }}
    env: ${{ matrix.platform.env }}
    steps:

      - name: Job config
        run: echo "$MATRIX_CONTEXT"
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-toolchain.name }}
          components: rustfmt, clippy
          default: true

      - name: Prepare the build environment
        run: ${{ matrix.platform.build-env-script }}

      - name: Set up Vistual Studio Command Prompt (Windows only)
        uses: ilammy/msvc-dev-cmd@v1

      - name: Print build environment info
        run: |
          set -x
          cargo --version
          cargo clippy --version
          env

      - name: Run cargo ${{ matrix.mode.cargo-command }}
        uses: actions-rs/cargo@v1
        with:
          command: ${{ matrix.mode.cargo-command }}
          args: ${{ matrix.mode.cargo-args }}

  package:
    name: stable / ${{ matrix.platform.name }} / package
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:

        platform:
          - name: Windows
            os: windows-latest
            packaging-env-script: .github/scripts/packaging_env/windows.sh
            packaging-script: .github/scripts/packaging/windows.sh
            env:
              CARGO_INCREMENTAL: "0"
            experimental: false
          - name: Linux
            os: ubuntu-latest
            packaging-env-script: .github/scripts/packaging_env/linux.sh
            packaging-script: .github/scripts/packaging/linux.sh
            env: {}
            experimental: false

      fail-fast: false
    env: ${{ matrix.platform.env }}
    steps:

      - name: Job config
        run: echo "$MATRIX_CONTEXT"
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          default: true

      - name: Prepare the packaging environment
        run: ${{ matrix.platform.packaging-env-script }}

      - name: Set up Vistual Studio Command Prompt (Windows only)
        uses: ilammy/msvc-dev-cmd@v1

      - name: Print packaging environment info
        run: |
          set -x
          cargo --version
          cargo clippy --version
          env

      - name: Run cargo build (release)
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --workspace

      - name: Do the packaging
        run: ${{ matrix.platform.packaging-script }} "${{ github.workspace }}/target/artifacts"

      - name: Upload packaged artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.name }} Build
          path: ${{ github.workspace }}/target/artifacts
